name: labeler bot

on:
  pull_request:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: check-label
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          retries: 1
          script: |
            const labels = ["release: major", "release: minor", "release: patch", "release: none"];
            const { data: issue_data } = await github.rest.issues.get({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const issue_labels = issue_data.labels.map(label => label.name);
            const is_release_label = labels.some(label => issue_labels.includes(label));
            if (is_release_label) {
              core.setOutput("is_release_label", "true");
            } else {
              core.setOutput("is_release_label", "false");
            }

      - name: add-label
        if: "${{steps.check-label.outputs.is_release_label != 'true'}}"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            script: console.log(context)
          # const comment = context.payload.comment.body;
          # if (comment.match(/\/release major/)) {
          #   await github.rest.issues.addLabels({
          #     owner: context.repo.owner,
          #     repo: context.repo.repo,
          #     issue_number: context.issue.number,
          #     labels: ["release: major"]
          #   });
          # } else if (comment.match(/\/release minor/)) {
          #   await github.rest.issues.addLabels({
          #     owner: context.repo.owner,
          #     repo: context.repo.repo,
          #     issue_number: context.issue.number,
          #     labels: ["release: minor"]
          #   });
          # } else if (comment.match(/\/release patch/)) {
          #   await github.rest.issues.addLabels({
          #     owner: context.repo.owner,
          #     repo: context.repo.repo,
          #     issue_number: context.issue.number,
          #     labels: ["release: patch"]
          #   });
          # } else if (comment.match(/\/release none/)) {
          #   await github.rest.issues.addLabels({
          #     owner: context.repo.owner,
          #     repo: context.repo.repo,
          #     issue_number: context.issue.number,
          #     labels: ["release: none"]
          #   });
          # } else {
          #   await github.rest.issues.createComment({
          #     owner: context.repo.owner,
          #     repo: context.repo.repo,
          #     issue_number: context.issue.number,
          #     body: "Please add a label to this issue. \n\n- `/release major` \n- `/release minor` \n- `/release patch` \n- `/release none`"
          #   });
          # }
